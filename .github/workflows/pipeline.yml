name: PROD CI
on:
  push:
    branches:
      - main
      - dev
jobs:
  main:
    name: PROD pipeline
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/reusable.yml
    with:
    secrets:
      AWS_ACCESS: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STRIPE_PK: ${{ secrets.STRIPE_PK_MAIN }}
      SENTRY_DSN_FE: ${{ secrets.SENTRY_DSN_FE }}
      GOOGLE_API_KEY: ${{secrets.GOOGLE_API_KEY_MAIN }}
      INTERCOM_APP_ID: ${{ secrets.INTERCOM_APP_ID_MAIN }}
      URL_API: ${{ secrets.URL_API_MAIN }}
      STAGE: main
      DOMAIN: qa.envs.altscorpdev.com
      HOSTED_ZONE: altscorpdev.com
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'
      - name: NMP Install
        run: npm install
      - name: AWS Deploy Lambda
        run: npm run deploy:$STAGE
  dev:
    name: DEV pipeline
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/reusable.yml
    with:
    secrets:
      AWS_ACCESS: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      STRIPE_PK: ${{ secrets.STRIPE_PK_DEV }}
      SENTRY_DSN_FE: ${{ secrets.SENTRY_DSN_FE }}
      GOOGLE_API_KEY: ${{secrets.GOOGLE_API_KEY_MAIN }}
      INTERCOM_APP_ID: ${{ secrets.INTERCOM_APP_ID_DEV }}
      URL_API: ${{ secrets.URL_API_DEV }}
      STAGE: dev
      DOMAIN: dev.envs.altscorpdev.com
      HOSTED_ZONE: altscorpdev.com
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'
      - name: NMP Install
        run: npm install
      - name: AWS Deploy Lambda
        run: npm run deploy:$STAGE
